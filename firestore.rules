rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function userRole() {
      return get(/databases/$(db)/documents/users/$(request.auth.uid)).data.role;
    }

    match /users/{uid} {
      allow read: if request.auth != null && (request.auth.uid == uid || userRole() in ['admin','teacher']);
      // Allow a signed-in user to create their own profile document on first login/signup
      allow create: if request.auth != null && request.auth.uid == uid;
      // Only admin can update/delete user profiles/roles thereafter
      allow update, delete: if request.auth != null && userRole() == 'admin';
    }

    match /students/{sid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && userRole() in ['admin','teacher'];
    }

    match /classes/{cid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && userRole() in ['admin','teacher'];
    }

    match /timetable/{cid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && userRole() in ['admin','teacher'];
    }

    match /holidays/{hid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && userRole() == 'admin';
    }

    match /attendance/{date}/class_{cid}/{sid} {
      allow read: if request.auth != null;
      // Only admin/teacher can mark/change attendance
      allow create, update, delete: if request.auth != null && userRole() in ['admin','teacher'];
    }

    match /fcmTokens/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }
  }
}
